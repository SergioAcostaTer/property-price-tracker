networks:
  devnet:

volumes:
  pgdata:
  redpanda_data:

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped
    networks: [devnet]

  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped
    networks: [devnet]

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    command: >
      redpanda start
      --overprovisioned
      --smp 1
      --memory 512M
      --reserve-memory 0M
      --node-id 0
      --check=false
      --kafka-addr PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:19092
      --advertise-kafka-addr PLAINTEXT://redpanda:9092,OUTSIDE://localhost:19092
      --rpc-addr 0.0.0.0:33145
      --advertise-rpc-addr redpanda:33145
    # Only the external listener needs host exposure
    ports:
      - "19092:19092"
      - "9644:9644"
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster info --brokers redpanda:9092 >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 40
    restart: unless-stopped
    networks: [devnet]

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    environment:
      KAFKA_BROKERS: redpanda:9092
      KAFKA_TLS_ENABLED: "false"
    ports:
      - "8082:8080"
    depends_on:
      redpanda:
        condition: service_healthy
    restart: unless-stopped
    networks: [devnet]
